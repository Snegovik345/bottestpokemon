import telebot
import random
import config
bot = telebot.TeleBot(config.token)

class House:
    def __init__(self, size, material, country):
        self.size = size
        self.material = material
        self.country = country
    
    def open(self):
        return "üö™ –î–æ–º –æ—Ç–∫—Ä—ã—Ç!"
    
    def closed(self):
        return "üîí –î–æ–º –∑–∞–∫—Ä—ã—Ç!"
    
    def info(self):
        return (
            f"üè† –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–º–µ:\n\n"
            f"‚ñ´Ô∏è –†–∞–∑–º–µ—Ä: {self.size}\n"
            f"‚ñ´Ô∏è –ú–∞—Ç–µ—Ä–∏–∞–ª: {self.material}\n"
            f"‚ñ´Ô∏è –°—Ç—Ä–∞–Ω–∞: {self.country}"
        )


quiz_questions = [
    "1. –°–∫–æ–ª—å–∫–æ –ª–µ—Ç —Ä–∞–∑–ª–∞–≥–∞–µ—Ç—Å—è –ø–ª–∞—Å—Ç–∏–∫–æ–≤–∞—è –±—É—Ç—ã–ª–∫–∞? (20/100/450/1000)",
    "2. –ö–∞–∫–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª –Ω–∞–∏–±–æ–ª–µ–µ —ç–∫–æ–ª–æ–≥–∏—á–µ–Ω? (–°—Ç–µ–∫–ª–æ/–ü–ª–∞—Å—Ç–∏–∫/–ê–ª—é–º–∏–Ω–∏–π)",
    "3. –ß—Ç–æ —ç–∫–æ–Ω–æ–º–∏—Ç –±–æ–ª—å—à–µ –≤–æ–¥—ã? (–î—É—à/–í—ã–∫–ª.–≤–æ–¥—É –ø—Ä–∏ —á–∏—Å—Ç–∫–µ –∑—É–±–æ–≤/–ü–æ—Å—É–¥–æ–º–æ–π–∫–∞)",
    "4. –ö–∞–∫–æ–π % –ø–ª–∞—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –º–∏—Ä–µ? (9%/25%/50%)",
    "5. –ß—Ç–æ —Ä–∞–∑–ª–∞–≥–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ? (–°—Ç–µ–∫–ª–æ/–ë–∞–Ω.–∫–æ–∂—É—Ä–∞/–ü–∞–∫–µ—Ç)"
]

correct_answers = ["450", "–°—Ç–µ–∫–ª–æ", "–ü–æ—Å—É–¥–æ–º–æ–π–∫–∞", "9", "–ë–∞–Ω.–∫–æ–∂—É—Ä–∞"]

@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    bot.reply_to(message, """\
Hi there, I am EchoBot.
I am here to echo your kind words back to you. Just say anything nice and I'll say the exact same thing to you!\
""")

@bot.message_handler(commands=['house'])
def house_command(message):
    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏
        parts = message.text.split(maxsplit=3)
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–æ–º–∞
        house = House(
            size=parts[1],
            material=parts[2],
            country=parts[3] if len(parts) > 3 else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫—Ä–∞—Å–∏–≤–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(message.chat.id, house.info())
        bot.send_message(message.chat.id, house.open())
        bot.send_message(message.chat.id, house.closed())
    except:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /house [—Ä–∞–∑–º–µ—Ä] [–º–∞—Ç–µ—Ä–∏–∞–ª] [—Å—Ç—Ä–∞–Ω–∞]")

@bot.message_handler(commands=['quiz'])
def start_quiz(message):
    bot.send_message(message.chat.id, "üåç –≠–∫–æ-–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ (5 –≤–æ–ø—Ä–æ—Å–æ–≤):")
    msg = bot.send_message(message.chat.id, quiz_questions[0])
    bot.register_next_step_handler(msg, process_answer1)


def process_answer1(message):
    check_answer(message, 0, quiz_questions[1], process_answer2)

def process_answer2(message):
    check_answer(message, 1, quiz_questions[2], process_answer3)

def process_answer3(message):
    check_answer(message, 2, quiz_questions[3], process_answer4)

def process_answer4(message):
    check_answer(message, 3, quiz_questions[4], process_answer5)

def process_answer5(message):
    if message.text.lower() == correct_answers[4].lower():
        bot.send_message(message.chat.id, "‚úÖ –í–µ—Ä–Ω–æ!\n\n–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    else:
        bot.send_message(message.chat.id, f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_answers[4]}\n\n–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


def check_answer(message, answer_index, next_question, next_handler):
    if message.text.lower() == correct_answers[answer_index].lower():
        bot.send_message(message.chat.id, "‚úÖ –í–µ—Ä–Ω–æ!")
    else:
        bot.send_message(message.chat.id, f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct_answers[answer_index]}")
    
    msg = bot.send_message(message.chat.id, next_question)
    bot.register_next_step_handler(msg, next_handler)


@bot.message_handler(commands=["info"])  
def info_text(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø Echobot! –Ø –¥—É–º–∞—é —Ç—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –ø–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ —è –¥–µ–ª–∞—é, –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!")



@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    file_id = message.photo[-1].file_id
    bot.reply_to(message, f"–ü–æ–ª—É—á–∏–ª —Ç–≤–æ—ë —Ñ–æ—Ç–æ! ID: {file_id}")



# Handle all other messages with content_type 'text' (content_types defaults to ['text'])
@bot.message_handler(func=lambda message: True)
def echo_message(message):
    bot.reply_to(message, message.text)



bot.infinity_polling()